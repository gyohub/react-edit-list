"use strict";(self.webpackChunkreact_edit_list=self.webpackChunkreact_edit_list||[]).push([[962],{962:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var a=n(294);const i=a.memo((function(){return a.createElement("div",{dangerouslySetInnerHTML:{__html:'<h1 id="react-edit-list">react-edit-list</h1> <p><a href="https://github.com/mmomtchev/react-edit-list/blob/main/LICENSE"><img src="https://img.shields.io/github/license/mmomtchev/react-edit-list" alt="License: ISC"></a> <a href="https://www.npmjs.com/package/react-edit-list"><img src="https://img.shields.io/npm/v/react-edit-list" alt="npm version"></a> <a href="https://github.com/mmomtchev/react-edit-list/actions?query=workflow%3A%22Node.js+CI%22"><img src="https://github.com/mmomtchev/react-edit-list/workflows/Node.js%20CI/badge.svg" alt="Node.js CI"></a> <a href="https://codecov.io/gh/mmomtchev/react-edit-list"><img src="https://codecov.io/gh/mmomtchev/react-edit-list/branch/main/graph/badge.svg?token=ZHVvNADJrZ" alt="codecov"></a></p> <p>Universal Editable List React Component</p> <p><code>react-edit-list</code> allows for easy creation of editable lists in React that can be interfaced with a database</p> <ul> <li>Fully customizable</li> <li>Zero-dependency</li> <li>Supports async callbacks for calling externals APIs</li> <li>Supports input validation</li> <li>Supports optional <code>null</code> fields</li> </ul> <h1 id="installation">Installation</h1> <p>Still not published</p> <h1 id="usage">Usage</h1> <p>Refer to the <a href="https://mmomtchev.github.io/react-edit-list/">examples</a></p> <p><img src="https://raw.githubusercontent.com/mmomtchev/react-edit-list/main/screen-animation.gif" alt="screenshot"></p> <pre><code class="language-tsx">import * as React from &#39;react&#39;;\nimport ReactEditList, * as REL from &#39;react-edit-list&#39;;\n\nimport &#39;bootstrap/dist/css/bootstrap.min.css&#39;;\nimport &#39;../example.css&#39;;\n\n// This is the example data\nconst data = [\n    {id: 1, product: &#39;Desk&#39;, type: &#39;1&#39;, price: 100, stock: 20},\n    {id: 2, product: &#39;Printer&#39;, type: &#39;1&#39;, price: 500, stock: 10},\n    {id: 3, product: &#39;Paper&#39;, type: &#39;2&#39;, price: 5, stock: 2000},\n    {id: 4, product: &#39;Chair&#39;, type: &#39;1&#39;, price: 50, stock: 50},\n    {id: 5, product: &#39;Computer&#39;, type: &#39;1&#39;, price: 1000, stock: 20},\n    {id: 6, product: &#39;Rent&#39;, type: null, price: 2000, stock: undefined}\n];\n\n// This is the schema\nconst schema: REL.Schema = [\n    {name: &#39;id&#39;, type: &#39;id&#39;},\n    {name: &#39;product&#39;, type: &#39;string&#39;},\n    {\n        name: &#39;type&#39;,\n        type: [\n            {value: null, name: &#39;&#39;},\n            {value: &#39;1&#39;, name: &#39;capex&#39;},\n            {value: &#39;2&#39;, name: &#39;consumable&#39;}\n        ]\n    },\n    {name: &#39;price&#39;, type: &#39;number&#39;},\n    {name: &#39;stock&#39;, type: &#39;number&#39;}\n];\n\nexport default function Simple() {\n    return (\n        &lt;ReactEditList\n            schema={schema}\n            onLoad={() =&gt; data}\n            onUpdate={(item) =&gt; {\n                // Call your API here\n                console.log(&#39;UPDATE&#39;, item);\n            }}\n            onDelete={(item) =&gt; {\n                if (!confirm(&#39;Are you sure you want to delete it?&#39;)) return false;\n                // Call your API here\n                console.log(&#39;DELETE&#39;, item);\n            }}\n            onInsert={(item) =&gt; {\n                // Call your API here\n                console.log(&#39;INSERT&#39;, item);\n            }}\n            onChange={(items) =&gt; {\n                // Process the whole list\n                console.log(&#39;DATA&#39;, items);\n            }}\n            className=&#39;table table-light table-fixed align-middle&#39;\n            headClassName=&#39;table-dark&#39;\n            inputClassName=&#39;w-100&#39;\n            thClassName={{\n                // These allow to fix the column widths\n                product: &#39;col-4&#39;,\n                type: &#39;col-3&#39;,\n                price: &#39;col-2&#39;,\n                stock: &#39;col-2&#39;,\n                buttons: &#39;col-1&#39;\n            }}\n            btnValidateClassName=&#39;btn btn-success p-0 m-0&#39;\n            btnDeleteClassName=&#39;btn btn-danger py-0 px-1 m-0 mx-1&#39;\n            btnCancelClassName=&#39;btn btn-secondary py-0 px-1 m-0 mx-1&#39;\n        /&gt;\n    );\n}\n</code></pre> '}})}))}}]);