"use strict";(self.webpackChunkreact_edit_list=self.webpackChunkreact_edit_list||[]).push([[962],{962:(e,a,t)=>{t.r(a),t.d(a,{default:()=>o});var l=t(294);const o=l.memo((function(){return l.createElement("div",{dangerouslySetInnerHTML:{__html:'<h1 id="react-edit-list">react-edit-list</h1> <p><a href="https://github.com/mmomtchev/react-edit-list/blob/main/LICENSE"><img src="https://img.shields.io/github/license/mmomtchev/react-edit-list" alt="License: ISC"></a> <a href="https://www.npmjs.com/package/react-edit-list"><img src="https://img.shields.io/npm/v/react-edit-list" alt="npm version"></a> <a href="https://github.com/mmomtchev/react-edit-list/actions?query=workflow%3A%22Node.js+CI%22"><img src="https://github.com/mmomtchev/react-edit-list/workflows/Node.js%20CI/badge.svg" alt="Node.js CI"></a> <a href="https://codecov.io/gh/mmomtchev/react-edit-list"><img src="https://codecov.io/gh/mmomtchev/react-edit-list/branch/main/graph/badge.svg?token=ZHVvNADJrZ" alt="codecov"></a></p> <p>Universal Editable List React Component</p> <p><code>react-edit-list</code> allows for easy creation of editable lists in React that can be interfaced with a database</p> <ul> <li>Fully customizable</li> <li>Zero-dependency</li> <li>Supports async callbacks for calling externals APIs</li> <li>Supports input validation</li> <li>Supports optional <code>null</code> fields</li> <li>Supports custom field types</li> </ul> <h1 id="installation">Installation</h1> <pre><code class="language-shell">npm i --save react-edit-layers\n</code></pre> <h1 id="usage">Usage</h1> <p>Refer to the <a href="https://mmomtchev.github.io/react-edit-list/">examples</a></p> <p><img src="https://raw.githubusercontent.com/mmomtchev/react-edit-list/main/screen-animation.gif" alt="screenshot"></p> <h1 id="api">API</h1> <h3 id="table-of-contents">Table of Contents</h3> <ul> <li><a href="#element">Element</a></li> <li><a href="#schema">Schema</a></li> <li><a href="#row">Row</a></li> <li><a href="#props">Props</a><ul> <li><a href="#schema-1">schema</a></li> <li><a href="#onload">onLoad</a></li> <li><a href="#format">format</a></li> <li><a href="#edit">edit</a></li> <li><a href="#editprops">editProps</a></li> <li><a href="#headers">headers</a></li> <li><a href="#onchange">onChange</a></li> <li><a href="#oninsert">onInsert</a></li> <li><a href="#onupdate">onUpdate</a></li> <li><a href="#ondelete">onDelete</a></li> <li><a href="#defaultvalues">defaultValues</a></li> <li><a href="#classname">className</a></li> <li><a href="#btnvalidateclassname">btnValidateClassName</a></li> <li><a href="#btndeleteclassname">btnDeleteClassName</a></li> <li><a href="#btncancelclassname">btnCancelClassName</a></li> <li><a href="#headclassname">headClassName</a></li> <li><a href="#bodyclassname">bodyClassName</a></li> <li><a href="#trclassname">trClassName</a></li> <li><a href="#thclassname">thClassName</a></li> <li><a href="#tdclassname">tdClassName</a></li> <li><a href="#inputclassname">inputClassName</a></li> <li><a href="#btnvalidateelement">btnValidateElement</a></li> <li><a href="#btndeleteelement">btnDeleteElement</a></li> <li><a href="#btncancelelement">btnCancelElement</a></li> <li><a href="#disableupdate">disableUpdate</a></li> <li><a href="#disabledelete">disableDelete</a></li> <li><a href="#disableinsert">disableInsert</a></li> </ul> </li> <li><a href="#reacteditlist">ReactEditList</a><ul> <li><a href="#parameters">Parameters</a></li> </ul> </li> </ul> <h2 id="element">Element</h2> <p>Field type</p> <p>Type: (<code>&quot;id&quot;</code> | <code>&quot;string&quot;</code> | <code>&quot;number&quot;</code> | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a>&lt;{name: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, value: (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a> | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</a>)}&gt; | <code>&quot;custom&quot;</code>)</p> <h2 id="schema">Schema</h2> <p>Schema for the data</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a>&lt;{name: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, type: <a href="#element">Element</a>}&gt;</p> <h2 id="row">Row</h2> <p>A row of data</p> <p>Type: Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, Value&gt;</p> <h2 id="props">Props</h2> <p>ReactEditList properties</p> <h3 id="schema-1">schema</h3> <p>The schema for the data</p> <p>Type: <a href="#schema">Schema</a></p> <h3 id="onload">onLoad</h3> <p>Will be called to load the data, can be asynchronous</p> <p>Type: function (): (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a>&lt;<a href="#row">Row</a>&gt; | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a>&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a>&lt;<a href="#row">Row</a>&gt;&gt;)</p> <h3 id="format">format</h3> <p>Custom field formatters</p> <p>Type: Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, Formatter&gt;</p> <h3 id="edit">edit</h3> <p>Custom field editors</p> <p>Type: Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, Editor&gt;</p> <h3 id="editprops">editProps</h3> <p>Custom props to be passed to the field editors</p> <p>Type: Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, any&gt;&gt;</p> <h3 id="headers">headers</h3> <p>Custom headers, set to <code>null</code> to completely disable headers</p> <p>Type: Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, JSX.Element&gt;</p> <h3 id="onchange">onChange</h3> <p>Called on every change with all the elements</p> <p>Return <code>boolean</code> to deny the operation</p> <p>Type: function (data: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a>&lt;<a href="#row">Row</a>&gt;): (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a>&lt;(<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void)&gt;)</p> <h3 id="oninsert">onInsert</h3> <p>Called after insertion of a new element</p> <p>Return <code>boolean</code> to deny the operation</p> <p>Return a new item to modify its contents</p> <p>Type: function (item: <a href="#row">Row</a>): (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void | <a href="#row">Row</a> | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a>&lt;(<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void | <a href="#row">Row</a>)&gt;)</p> <h3 id="onupdate">onUpdate</h3> <p>Called after updating an existing element</p> <p>Return <code>boolean</code> to deny the operation</p> <p>Return a new item to modify its contents</p> <p>Type: function (updated: <a href="#row">Row</a>, old: <a href="#row">Row</a>): (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void | <a href="#row">Row</a> | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a>&lt;(<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void | <a href="#row">Row</a>)&gt;)</p> <h3 id="ondelete">onDelete</h3> <p>Called after deleting an element</p> <p>Return <code>boolean</code> to deny the operation</p> <p>Type: function (item: <a href="#row">Row</a>): (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a>&lt;(<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a> | void)&gt;)</p> <h3 id="defaultvalues">defaultValues</h3> <p>Optional default values for new elements</p> <p>Type: <a href="#row">Row</a></p> <h3 id="classname">className</h3> <p>Optional CSS class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="btnvalidateclassname">btnValidateClassName</h3> <p>Optional validate button class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="btndeleteclassname">btnDeleteClassName</h3> <p>Optional delete button class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="btncancelclassname">btnCancelClassName</h3> <p>Optional cancel button class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="headclassname">headClassName</h3> <p>Optional table head class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="bodyclassname">bodyClassName</h3> <p>Optional table body class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="trclassname">trClassName</h3> <p>Optional table TR class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="thclassname">thClassName</h3> <p>Optional table TH class name</p> <p>Type: (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a> | Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>&gt;)</p> <h3 id="tdclassname">tdClassName</h3> <p>Optional table TD class name</p> <p>Type: (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a> | Record&lt;<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>, <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>&gt;)</p> <h3 id="inputclassname">inputClassName</h3> <p>Optional table INPUT class name</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></p> <h3 id="btnvalidateelement">btnValidateElement</h3> <p>Optional custom button element</p> <p>Type: JSX.Element</p> <h3 id="btndeleteelement">btnDeleteElement</h3> <p>Optional custom button element</p> <p>Type: JSX.Element</p> <h3 id="btncancelelement">btnCancelElement</h3> <p>Optional custom button element</p> <p>Type: JSX.Element</p> <h3 id="disableupdate">disableUpdate</h3> <p>Disable updating</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></p> <h3 id="disabledelete">disableDelete</h3> <p>Disable deleting</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></p> <h3 id="disableinsert">disableInsert</h3> <p>Disable inserting</p> <p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></p> <h2 id="reacteditlist">ReactEditList</h2> <p>An universal editable list for React</p> <h3 id="parameters">Parameters</h3> <ul> <li><code>props</code> <strong><a href="#props">Props</a></strong> {Props}</li> </ul> <p>Returns <strong>JSX.Element</strong> </p> '}})}))}}]);