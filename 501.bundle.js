"use strict";(self.webpackChunkreact_edit_list=self.webpackChunkreact_edit_list||[]).push([[501],{6501:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport ReactEditList, * as REL from 'react-edit-list';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../example.css';\n\n// This is the example data\nconst data = [\n    {id: 1, product: 'Desk', type: '1', price: 100, stock: 20},\n    {id: 2, product: 'Printer', type: '1', price: 500, stock: 10},\n    {id: 3, product: 'Paper', type: '2', price: 5, stock: 2000},\n    {id: 4, product: 'Chair', type: '1', price: 50, stock: 50},\n    {id: 5, product: 'Computer', type: '1', price: 1000, stock: 20},\n    {id: 6, product: 'Rent', type: undefined, price: 2000, stock: undefined}\n];\n\n// This is the schema\nconst schema: REL.Schema = [\n    {name: 'id', type: 'id'},\n    {name: 'product', type: 'string'},\n    {\n        name: 'type',\n        type: [\n            {value: undefined, name: ''},\n            {value: '1', name: 'capex'},\n            {value: '2', name: 'consumable'}\n        ]\n    },\n    {name: 'price', type: 'number'},\n    {name: 'stock', type: 'number'}\n];\n\nexport default function CustomGridElements() {\n    return (\n        <div>\n            <p>\n                This grid uses custom elements. It replaces the table elements with divs placed on\n                Bootstrap&apos;s grid. It is a <strong>responsive</strong> design that will\n                automatically switch to two lines per row when you reduce the width of your screen\n                below 992px.\n            </p>\n            <ReactEditList\n                schema={schema}\n                onLoad={() => data}\n                onUpdate={(item) => {\n                    // Call your API here\n                    console.log('UPDATE', item);\n                }}\n                onDelete={(item) => {\n                    if (!confirm('Are you sure you want to delete it?')) return false;\n                    // Call your API here\n                    console.log('DELETE', item);\n                }}\n                onInsert={(item) => {\n                    // Call your API here\n                    console.log('INSERT', item);\n                }}\n                onChange={(items) => {\n                    // Process the whole list\n                    console.log('DATA', items);\n                }}\n                // This grid uses custom elements\n                // It replaces the <table> elements with divs placed on Bootstrap's grid\n                //\n                // It is a responsive design that will automatically switch to two\n                // lines per row when you reduce the width of your screen below 992px\n                //\n                className='container-fluid gx-0'\n                headClassName='bg-dark text-light'\n                bodyClassName='bg-light'\n                inputClassName='w-100'\n                thClassName={{\n                    product: 'col-lg-4 col-8 p-1',\n                    type: 'col-lg-3 col-4 p-1',\n                    price: 'col-lg-2 col-5 p-1',\n                    stock: 'col-lg-2 col-5 p-1',\n                    buttons: 'col-lg-1 col-2 p-1'\n                }}\n                tdClassName={{\n                    product: 'col-lg-4 col-8 p-1',\n                    type: 'col-lg-3 col-4 p-1',\n                    price: 'col-lg-2 col-5 p-1',\n                    stock: 'col-lg-2 col-5 p-1',\n                    buttons: 'col-lg-1 col-2 p-1'\n                }}\n                trClassName='gx-0 row border'\n                tableElement='div'\n                tbodyElement='div'\n                theadElement='div'\n                trElement='div'\n                tdElement='div'\n                thElement='div'\n                btnValidateClassName='btn border p-0 m-0'\n                btnDeleteClassName='btn border px-1 m-0 mx-1'\n                btnCancelClassName='btn border px-1 m-0 mx-1'\n            />\n        </div>\n    );\n}\n"}}]);