"use strict";(self.webpackChunkreact_edit_list=self.webpackChunkreact_edit_list||[]).push([[979],{3979:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const t='<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactEditList<span class="token punctuation">,</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">REL</span> <span class="token keyword">from</span> <span class="token string">"react-edit-list"</span><span class="token punctuation">;</span>\n\n<span class="token comment">// This example uses sortablejs to implement drag&amp;drop reordering</span>\n<span class="token keyword">import</span> Sortable <span class="token keyword">from</span> <span class="token string">"sortablejs"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">"bootstrap/dist/css/bootstrap.min.css"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">"../example.css"</span><span class="token punctuation">;</span>\n\n<span class="token comment">// This is the example data</span>\n<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> product<span class="token operator">:</span> <span class="token string">"Desk"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> stock<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> product<span class="token operator">:</span> <span class="token string">"Printer"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> stock<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> product<span class="token operator">:</span> <span class="token string">"Paper"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> stock<span class="token operator">:</span> <span class="token number">2000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> product<span class="token operator">:</span> <span class="token string">"Chair"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> stock<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> product<span class="token operator">:</span> <span class="token string">"Computer"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> stock<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// This is the schema</span>\n<span class="token keyword">const</span> schema<span class="token operator">:</span> <span class="token constant">REL</span><span class="token punctuation">.</span>Schema <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"id"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"id"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"product"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"string"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">"type"</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"capex"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"consumable"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"price"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"number"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"stock"</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">"number"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Reordering</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ref <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  React<span class="token punctuation">.</span><span class="token function">useLayoutEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> sortable <span class="token operator">=</span> Sortable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>\n      document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"sortable-items"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// We don\'t want to reorder the empty insertion row</span>\n        draggable<span class="token operator">:</span> <span class="token string">".draggable"</span><span class="token punctuation">,</span>\n        <span class="token comment">// You need this for toArray() to work</span>\n        dataIdAttr<span class="token operator">:</span> <span class="token string">"dataid"</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">onSort</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// You will need to keep a local copy of the data</span>\n          data <span class="token operator">=</span> sortable<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=></span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n          <span class="token comment">// Call your API here</span>\n          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"REORDER"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n          <span class="token comment">// And trigger a refresh with it</span>\n          ref<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>\n            <span class="token keyword">new</span> <span class="token class-name">KeyboardEvent</span><span class="token punctuation">(</span><span class="token string">"keydown"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              key<span class="token operator">:</span> <span class="token string">"R"</span><span class="token punctuation">,</span>\n              altKey<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              bubbles<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-3 fw-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        You can reorder the items by dragging and dropping\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ReactEditList</span></span>\n        <span class="token attr-name">schema</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>schema<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onLoad</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> data<span class="token punctuation">}</span></span>\n        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onUpdate</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// Call your API here</span>\n          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"UPDATE"</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onDelete</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"Are you sure you want to delete it?"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n          <span class="token comment">// Call your API here</span>\n          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"DELETE"</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onInsert</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// Call your API here</span>\n          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"INSERT"</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-dark table-rounded table-fixed align-middle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">headClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-light<span class="token punctuation">"</span></span>\n        <span class="token attr-name">inputClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w-100<span class="token punctuation">"</span></span>\n        <span class="token attr-name">thClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token comment">// These allow to fix the column widths</span>\n          product<span class="token operator">:</span> <span class="token string">"col-4"</span><span class="token punctuation">,</span>\n          type<span class="token operator">:</span> <span class="token string">"col-3"</span><span class="token punctuation">,</span>\n          price<span class="token operator">:</span> <span class="token string">"col-2"</span><span class="token punctuation">,</span>\n          stock<span class="token operator">:</span> <span class="token string">"col-2"</span><span class="token punctuation">,</span>\n          buttons<span class="token operator">:</span> <span class="token string">"col-1"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">bodyClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sortable-items<span class="token punctuation">"</span></span>\n        <span class="token attr-name">btnValidateClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-success p-0 m-0<span class="token punctuation">"</span></span>\n        <span class="token attr-name">btnDeleteClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger py-0 px-1 m-0 mx-1<span class="token punctuation">"</span></span>\n        <span class="token attr-name">btnCancelClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary py-0 px-1 m-0 mx-1<span class="token punctuation">"</span></span>\n        <span class="token attr-name">rowClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>draggable<span class="token punctuation">"</span></span>\n        <span class="token attr-name">insertClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>not-draggable<span class="token punctuation">"</span></span>\n        <span class="token attr-name">filler</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span><span class="token plain-text">&amp;#8230;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}]);